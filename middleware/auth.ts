// middleware/auth.ts - VERS√ÉO CORRIGIDA E DEFINITIVA
export default defineNuxtRouteMiddleware((to, from) => {
  console.log("üõ°Ô∏è [AUTH MIDDLEWARE] Executando...");
  console.log("- Rota origem:", from?.path || "nenhuma");
  console.log("- Rota destino:", to.path);

  const { isLoggedIn, loading, user, session } = useAuth();

  // ‚úÖ Log detalhado do estado atual
  console.log("üìä [AUTH MIDDLEWARE] Estado de autentica√ß√£o:", {
    isLoggedIn: isLoggedIn.value,
    loading: loading.value,
    hasUser: !!user.value,
    hasSession: !!session.value,
    userEmail: user.value?.email || "N/A",
    sessionExpiry: session.value?.expires_at || "N/A",
  });

  // ‚úÖ Aguardar carregamento - CR√çTICO
  if (loading.value) {
    console.log("‚è≥ [AUTH MIDDLEWARE] Ainda carregando, aguardando...");
    return; // N√£o redireciona enquanto carrega
  }

  // ‚úÖ Verificar autentica√ß√£o
  if (!isLoggedIn.value) {
    console.log("üö´ [AUTH MIDDLEWARE] Usu√°rio N√ÉO autenticado");
    console.log("- Rota protegida tentada:", to.path);
    console.log("- Redirecionando para /login");

    return navigateTo("/login");
  }

  // ‚úÖ Usu√°rio autenticado - permitir acesso
  console.log("‚úÖ [AUTH MIDDLEWARE] Usu√°rio autenticado, permitindo acesso");
  console.log("- Usu√°rio:", user.value?.email);
  console.log("- Acessando:", to.path);
});
